import { Injectable, Logger } from '@nestjs/common'
import { Timeout } from '@nestjs/schedule'
import { config, database, up } from 'migrate-mongo'

import * as mongooseMigrateConfig from '../../database/migrate-options'
import { Retry, UseMaintenanceLocker } from '@webundsoehne/nestjs-util'

@Injectable()
export class MigrationTask {
  private readonly logger: Logger = new Logger(this.constructor.name)

  @Timeout(0)
  @UseMaintenanceLocker()
  @Retry({
    retry: 24,
    interval: 3 * 1000
  })
  async migrateMongoose (): Promise<void> {
    try {
      config.set(mongooseMigrateConfig)

      const { db, client } = await database.connect()
      const migrated = await up(db, client)

      if (migrated.length > 0) {
        migrated.forEach((fileName) => this.logger.verbose(['Migrated: %s', fileName]))
      } else {
        this.logger.verbose('No pending migration found.')
      }
    } catch (exception) {
      this.logger.error(exception.message)

      throw exception
    }
  }
}
